getwd
getwd()
options(stringsAsFactors = FALSE);
library(WGCNA);
install.packages(c("matrixStats", "Hmisc", "splines", "foreach", "doParallel", "fastcluster", "dynamicTreeCut", "survival", "BiocManager")
BiocManager::install(c("GO.db", "preprocessCore", "impute"));
install.packages(c("matrixStats", "Hmisc", "splines", "foreach", "doParallel", "fastcluster", "dynamicTreeCut", "survival"))
source("http://bioconductor.org/biocLite.R")
biocLite(c("GO.db", "preprocessCore", "impute"))
R.version
source("http://bioconductor.org/biocLite.R")
biocLite(c("GO.db", "preprocessCore", "impute"))
BiocManager::install(c("GO.db", "preprocessCore", "impute"));
source("http://bioconductor.org/biocLite.R")
BiocManager::install(c("GO.db", "preprocessCore", "impute"));
if (!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install(version = "3.14")
BiocManager::install(c("GO.db", "preprocessCore", "impute"));
names(femData)
library(WGCNA);
BiocManager::install("WGCNA")
ls
source("C:/R_CJY/WGCNA_test/downloadPackage.r", echo=TRUE)
source("C:/R_CJY/WGCNA_test/downloadPackage.r", echo=TRUE)
source("C:/R_CJY/WGCNA_test/downloadPackage.r", echo=TRUE)
source("C:/R_CJY/WGCNA_test/test01.r", echo=TRUE)
source("C:/R_CJY/WGCNA_test/test01.r", echo=TRUE)
source("C:/R_CJY/WGCNA_test/test01.r", echo=TRUE)
names(femData)
dim(femData);
shapiro.test(c(1,3,5, 3, 5, 6, 7))
install.packages("openxlsx")
getwd();
df <- read.xlsx("t_test.xlsx")
getwd();
# show current directory on terminal
getwd();
# set workingDir to current directory
workingDir = "."
setwd(workingDir)
# show current directory on terminal
getwd();
# set workingDir to current directory
workingDir = "."
setwd(workingDir)
# show current directory on terminal
getwd();
# set workingDir to current directory
workingDir = "."
setwd(workingDir)
# show current directory on terminal
getwd();
# set workingDir to current directory
workingDir = "."
setwd(workingDir)
# show current directory on terminal
getwd();
# set workingDir to current directory
workingDir = "."
setwd(workingDir)
# show current directory on terminal
getwd();
# set workingDir to current directory
workingDir = "."
setwd(workingDir)
setwd(workingDir)
# load package
library(WGCNA);
# don't known meaning
options(stringsAsFactors = FALSE);
# read data
femData = read.csv("LiverFemale3600.csv");
# dim similar to python's shape
dim(femData)
names(femData)
# remove auxiliary data transit data
# not quite understand
datExpr0 = as.data.frame(t(femData[, -c(1:8)])); names(datExpr0) = femData$substanceBXH;
rownames(datExpr0) = names(femData)[-c(1:8)];
R.version()
R.version
R.version
if (!gsg$allOK) {
# Optionally, print the gene and sample names that were removed: if (sum(!gsg$goodGenes)>0) printFlush(paste("Removing genes:", paste(names(datExpr0)[!gsg$goodGenes], collapse = ", ")));
if (sum(!gsg$goodSamples)>0) printFlush(paste("Removing samples:", paste(rownames(datExpr0)[!gsg$goodSamples], collapse = ", ")));
# Remove the offending genes and samples from the data: datExpr0 = datExpr0[gsg$goodSamples, gsg$goodGenes]
}
R.version
R RHOME
Rhome
R.version
# load package
library(WGCNA);
